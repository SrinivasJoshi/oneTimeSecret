# # Nginx Configuration with SSL for OneTimeSecret

# server {
#     listen 80;
#     server_name onetimesecret.xyz www.onetimesecret.xyz;
    
#     # Redirect all HTTP traffic to HTTPS
#     location / {
#         return 301 https://$host$request_uri;
#     }
# }

# server {
#     listen 443 ssl;
#     server_name onetimesecret.xyz www.onetimesecret.xyz;

#     # SSL certificate paths - these will be filled by Certbot
#     ssl_certificate /etc/letsencrypt/live/onetimesecret.xyz/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/onetimesecret.xyz/privkey.pem;
    
#     # Recommended SSL settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_tickets off;

#     # HSTS (optional, but recommended)
#     add_header Strict-Transport-Security "max-age=63072000" always;
    
#     # Define location for static files
#     root /usr/share/nginx/html;
#     index index.html index.htm;

#     # Enable gzip compression for performance
#     gzip on;
#     gzip_vary on;
#     gzip_proxied any;
#     gzip_comp_level 6;
#     gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

#     # Route API requests to the backend service
#     location /api/ {
#         # Ensure trailing slash consistency if needed by backend framework
#         proxy_pass http://backend:9000; # Match backend service name and internal PORT

#         # Standard proxy headers
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     # Handle SPA routing: try serving file, then directory, then fallback to index.html
#     location / {
#         try_files $uri $uri/ /index.html;
#     }
# }
# Basic Nginx Configuration for EphemeralText

server {
    listen 80;
    server_name localhost; # Adjust if you have a domain name

    # Define location for static files
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Enable gzip compression for performance
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # Route API requests to the backend service
    location /api/ {
        # Ensure trailing slash consistency if needed by backend framework
        proxy_pass http://backend:9000; # Match backend service name and internal PORT

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: Adjust timeouts if needed
        # proxy_connect_timeout       60s;
        # proxy_send_timeout          60s;
        # proxy_read_timeout          60s;
        # proxy_buffer_size           16k;
        # proxy_buffers               4 32k;
        # proxy_busy_buffers_size     64k;
    }

    # Handle SPA routing: try serving file, then directory, then fallback to index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Optional: Add error pages
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     root /usr/share/nginx/html;
    # }
}